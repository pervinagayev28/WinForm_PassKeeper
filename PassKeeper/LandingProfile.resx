<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing"">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="lbl_image.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>